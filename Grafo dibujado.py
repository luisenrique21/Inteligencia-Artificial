import networkx as nx
import matplotlib.pyplot as plt


# https://networkx.org/documentation/stable/reference/classes/generated/networkx.DiGraph.add_edge.html?highlight=add_edge#networkx.DiGraph.add_edge
# Note: The nodes u and v will be automatically added if they are not already in the graph.
def agregar_arista(G, u, v, w=1, di=True):
    G.add_edge(u, v, weight=w)

    # Si el grafo no es dirigido
    if not di:
        # Agrego otra arista en sentido contrario
        G.add_edge(v, u, weight=w)


if __name__ == '__main__':
    # Instantiate the DiGraph
    G = nx.DiGraph()

    # Add node/edge pairs
    agregar_arista(G, "A", "B", 1, False)
    agregar_arista(G, "A", "C", 2, False)
    agregar_arista(G, "A", "D", 3, False)
    agregar_arista(G, "A", "O", 2, False)
    agregar_arista(G, "A", "X", 2, False)
    agregar_arista(G, "A", "A0", 2, False)
    agregar_arista(G, "B", "C", 4, False)
    agregar_arista(G, "B", "F", 2, False)
    agregar_arista(G, "B", "M", 4, False)
    agregar_arista(G, "C", "D", 5, False)
    agregar_arista(G, "C", "E", 5, False)
    agregar_arista(G, "C", "U", 3, False)
    agregar_arista(G, "C", "V", 3, False)
    agregar_arista(G, "D", "E", 1, False)
    agregar_arista(G, "D", "T", 1, False)
    agregar_arista(G, "D", "X", 3, False)
    agregar_arista(G, "E", "I", 3, False)
    agregar_arista(G, "E", "L", 3, False)
    agregar_arista(G, "F", "G", 3, False)
    agregar_arista(G, "F", "H", 2, False)
    agregar_arista(G, "F", "U", 2, False)
    agregar_arista(G, "G", "H", 4, False)
    agregar_arista(G, "G", "I", 2, False)
    agregar_arista(G, "G", "J", 3, False)
    agregar_arista(G, "G", "U", 3, False)
    agregar_arista(G, "H", "K", 3, False)
    agregar_arista(G, "I", "J", 5, False)
    agregar_arista(G, "I", "K", 5, False)
    agregar_arista(G, "I", "R", 3, False)
    agregar_arista(G, "I", "V", 2, False)
    agregar_arista(G, "J", "N", 3, False)
    agregar_arista(G, "J", "D0", 2, False)
    agregar_arista(G, "K", "M", 5, False)
    agregar_arista(G, "K", "B0", 2, False)
    agregar_arista(G, "K", "D0", 2, False)
    agregar_arista(G, "L", "E", 2, False)
    agregar_arista(G, "L", "T", 2, False)
    agregar_arista(G, "L", "P", 2, False)
    agregar_arista(G, "L", "W", 2, False)
    agregar_arista(G, "M", "B0", 2, False)
    agregar_arista(G, "M", "H0", 2, False)
    agregar_arista(G, "N", "S", 3, False)
    agregar_arista(G, "N", "Y", 2, False)
    agregar_arista(G, "O", "T", 2, False)
    agregar_arista(G, "O", "P", 4, False)
    agregar_arista(G, "O", "A0", 3, False)
    agregar_arista(G, "O", "E0", 3, False)
    agregar_arista(G, "P", "L", 3, False)
    agregar_arista(G, "P", "A0", 3, False)
    agregar_arista(G, "P", "E0", 3, False)
    agregar_arista(G, "Q", "T", 5, False)
    agregar_arista(G, "Q", "S", 5, False)
    agregar_arista(G, "Q", "W", 2, False)
    agregar_arista(G, "Q", "Z", 2, False)
    agregar_arista(G, "R", "S", 1, False)
    agregar_arista(G, "R", "Y", 2, False)
    agregar_arista(G, "R", "Z", 2, False)
    agregar_arista(G, "R", "Z", 2, False)
    agregar_arista(G, "W", "Z", 3, False)
    agregar_arista(G, "W", "C0", 3, False)
    agregar_arista(G, "Y", "Z", 4, False)
    agregar_arista(G, "A0", "H0", 3, False)
    agregar_arista(G, "B0", "D0", 3, False)
    agregar_arista(G, "C0", "F0", 3, False)
    agregar_arista(G, "D0", "G0", 2, False)
    agregar_arista(G, "D0", "I0", 2, False)
    agregar_arista(G, "E0", "F0", 3, False)
    agregar_arista(G, "E0", "M0", 3, False)
    agregar_arista(G, "F0", "G0", 5, False)
    agregar_arista(G, "F0", "J0", 2, False)
    agregar_arista(G, "F0", "K0", 2, False)
    agregar_arista(G, "F0", "N0", 2, False)
    agregar_arista(G, "H0", "I0", 2, False)
    agregar_arista(G, "H0", "L0", 2, False)
    agregar_arista(G, "H0", "M0", 5, False)
    agregar_arista(G, "J0", "N0", 2, False)
    agregar_arista(G, "J0", "U0", 3, False)
    agregar_arista(G, "K0", "L0", 2, False)
    agregar_arista(G, "O0", "P0", 2, False)
    agregar_arista(G, "O0", "Q0", 2, False)
    agregar_arista(G, "P0", "T0", 3, False)
    agregar_arista(G, "Q0", "R0", 3, False)
    agregar_arista(G, "R0", "S0", 3, False)
    agregar_arista(G, "S0", "V0", 2, False)
    agregar_arista(G, "T0", "U0", 3, False)
    agregar_arista(G, "U0", "W0", 4, False)
    agregar_arista(G, "U0", "X0", 3, False)
    agregar_arista(G, "V0", "Q0", 3, False)
    agregar_arista(G, "V0", "X0", 3, False)
    agregar_arista(G, "W0", "X0", 4, False)



    # Draw the networks
    #pos = nx.layout.planar_layout(G)
    nx.draw_networkx(G)
    labels = nx.get_edge_attributes(G, 'weight')
   # nx.draw_networkx_edge_labels(G, edge_labels=labels)
    plt.title("Grafo con NetworkX")
    plt.show()
